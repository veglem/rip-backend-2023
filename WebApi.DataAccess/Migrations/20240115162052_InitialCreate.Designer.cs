// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApi.DataAccess;

#nullable disable

namespace WebApi.DataAccess.Migrations
{
    [DbContext(typeof(RectorOrdersDatabaseContext))]
    [Migration("20240115162052_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApi.AppServices.Contracts.Models.UniversityEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("character varying(70)");

                    b.Property<string>("Number")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Position")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("UniversityEmployee_pk");

                    b.HasIndex("UnitId");

                    b.ToTable("UniversityEmployee", (string)null);
                });

            modelBuilder.Entity("WebApi.AppServices.Contracts.Models.UnivesityUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int?>("ParrentUnit")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("UnivesityUnit_pk");

                    b.HasIndex("ParrentUnit");

                    b.ToTable("UnivesityUnit", (string)null);
                });

            modelBuilder.Entity("WebApi.DataAccess.RectorOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CreatorId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("FormationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ModeratorId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<string>("OrderBody")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("RectorOrder_pk");

                    b.HasIndex("CreatorId");

                    b.HasIndex("ModeratorId");

                    b.HasIndex("StatusId");

                    b.ToTable("RectorOrder", (string)null);
                });

            modelBuilder.Entity("WebApi.DataAccess.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("Request_pk");

                    b.HasIndex("OrderId");

                    b.HasIndex("UnitId");

                    b.ToTable("Request", (string)null);
                });

            modelBuilder.Entity("WebApi.DataAccess.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id")
                        .HasName("Status_pk");

                    b.ToTable("Status", (string)null);
                });

            modelBuilder.Entity("WebApi.DataAccess.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsModerator")
                        .HasColumnType("boolean");

                    b.Property<string>("Passord")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("Id")
                        .HasName("User_pk");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("WebApi.AppServices.Contracts.Models.UniversityEmployee", b =>
                {
                    b.HasOne("WebApi.AppServices.Contracts.Models.UnivesityUnit", "Unit")
                        .WithMany("UniversityEmployees")
                        .HasForeignKey("UnitId")
                        .HasConstraintName("UniversityEmployee_UnivesityUnit_Id_fk");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("WebApi.AppServices.Contracts.Models.UnivesityUnit", b =>
                {
                    b.HasOne("WebApi.AppServices.Contracts.Models.UnivesityUnit", "ParrentUnitNavigation")
                        .WithMany("InverseParrentUnitNavigation")
                        .HasForeignKey("ParrentUnit")
                        .HasConstraintName("UnivesityUnit_UnivesityUnit_Id_fk");

                    b.Navigation("ParrentUnitNavigation");
                });

            modelBuilder.Entity("WebApi.DataAccess.RectorOrder", b =>
                {
                    b.HasOne("WebApi.DataAccess.User", "Creator")
                        .WithMany("RectorOrderCreators")
                        .HasForeignKey("CreatorId")
                        .IsRequired()
                        .HasConstraintName("RectorOrder_User_Id_fk2");

                    b.HasOne("WebApi.DataAccess.User", "Moderator")
                        .WithMany("RectorOrderModerators")
                        .HasForeignKey("ModeratorId")
                        .HasConstraintName("RectorOrder_User_Id_fk");

                    b.HasOne("WebApi.DataAccess.Status", "Status")
                        .WithMany("RectorOrders")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("RectorOrder_Status_Id_fk");

                    b.Navigation("Creator");

                    b.Navigation("Moderator");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("WebApi.DataAccess.Request", b =>
                {
                    b.HasOne("WebApi.DataAccess.RectorOrder", "Order")
                        .WithMany("Requests")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("Request_RectorOrder_Id_fk");

                    b.HasOne("WebApi.AppServices.Contracts.Models.UnivesityUnit", "Unit")
                        .WithMany("Requests")
                        .HasForeignKey("UnitId")
                        .IsRequired()
                        .HasConstraintName("Request_UnivesityUnit_Id_fk");

                    b.Navigation("Order");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("WebApi.AppServices.Contracts.Models.UnivesityUnit", b =>
                {
                    b.Navigation("InverseParrentUnitNavigation");

                    b.Navigation("Requests");

                    b.Navigation("UniversityEmployees");
                });

            modelBuilder.Entity("WebApi.DataAccess.RectorOrder", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("WebApi.DataAccess.Status", b =>
                {
                    b.Navigation("RectorOrders");
                });

            modelBuilder.Entity("WebApi.DataAccess.User", b =>
                {
                    b.Navigation("RectorOrderCreators");

                    b.Navigation("RectorOrderModerators");
                });
#pragma warning restore 612, 618
        }
    }
}
